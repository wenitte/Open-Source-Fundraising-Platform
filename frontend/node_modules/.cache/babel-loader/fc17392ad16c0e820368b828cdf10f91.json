{"ast":null,"code":"var _jsxFileName = \"/Users/josiasapiou/dev/raiseme/frontend/src/components/Checkout.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport StripeCheckout from 'react-stripe-checkout';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport CONFIGURATION from '../configuration';\nimport { database } from '../utils/firebase';\nimport Button from './Button';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fromTalerToCent = amount => amount * 100;\n\nconst onToken = (amount, description, onSuccess, onError) => token => axios.post(process.env.PAYMENT_SERVER_URL, {\n  description,\n  source: token.id,\n  currency: CONFIGURATION.currency,\n  amount: fromTalerToCent(amount)\n}).then(onSuccess).catch(onError);\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Form;\nconst FormContent = styled.div`\n  margin: 5px;\n`;\n_c2 = FormContent;\nconst Label = styled.label`\n  margin-right: 10px;\n`;\n_c3 = Label;\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      amount: CONFIGURATION.defaultAmount,\n      username: '',\n      isSuccess: null,\n      isError: null\n    };\n    this.onAmountChange = this.onAmountChange.bind(this);\n    this.onUsernameChange = this.onUsernameChange.bind(this);\n    this.onSuccess = this.onSuccess.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  onUsernameChange(event) {\n    const {\n      value\n    } = event.target;\n    this.setState({\n      username: value\n    });\n  }\n\n  onAmountChange(event) {\n    const {\n      value\n    } = event.target;\n    this.setState({\n      amount: value < 0 ? value * -1 : value\n    });\n  }\n\n  onSuccess({\n    data\n  }) {\n    const {\n      amount,\n      username\n    } = this.state;\n    database.ref('fundings').push({\n      amount: +amount,\n      email: data.success.source.name,\n      username,\n      currency: CONFIGURATION.currency\n    });\n    this.setState({\n      isSuccess: true\n    });\n  }\n\n  onError() {\n    this.setState({\n      isError: true\n    });\n  }\n\n  render() {\n    const {\n      amount,\n      username,\n      isError,\n      isSuccess\n    } = this.state;\n\n    if (isSuccess) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thanks for your funding!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Something went wrong. The payment couldn't be processed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormContent, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: [\"Amount (\", getSymbolFromCurrency(CONFIGURATION.currency), \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            max: \"99999\",\n            value: amount,\n            onChange: this.onAmountChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Your Name (leave empty to stay anonymous):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            onChange: this.onUsernameChange,\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(StripeCheckout, {\n            name: CONFIGURATION.checkoutTitle,\n            description: CONFIGURATION.checkoutDescription,\n            amount: fromTalerToCent(amount),\n            token: onToken(amount, CONFIGURATION.checkoutDescription, this.onSuccess, this.onError),\n            currency: CONFIGURATION.currency,\n            stripeKey: process.env.STRIPE_PUBLISHABLE_KEY,\n            panelLabel: CONFIGURATION.checkoutButtonLabel,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              children: CONFIGURATION.callToAction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Checkout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"FormContent\");\n$RefreshReg$(_c3, \"Label\");","map":{"version":3,"sources":["/Users/josiasapiou/dev/raiseme/frontend/src/components/Checkout.js"],"names":["React","Component","styled","axios","StripeCheckout","getSymbolFromCurrency","CONFIGURATION","database","Button","Input","fromTalerToCent","amount","onToken","description","onSuccess","onError","token","post","process","env","PAYMENT_SERVER_URL","source","id","currency","then","catch","Form","div","FormContent","Label","label","Checkout","constructor","state","defaultAmount","username","isSuccess","isError","onAmountChange","bind","onUsernameChange","event","value","target","setState","data","ref","push","email","success","name","render","checkoutTitle","checkoutDescription","STRIPE_PUBLISHABLE_KEY","checkoutButtonLabel","callToAction"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport StripeCheckout from 'react-stripe-checkout';\nimport getSymbolFromCurrency from 'currency-symbol-map';\n\nimport CONFIGURATION from '../configuration';\nimport { database } from '../utils/firebase';\n\nimport Button from './Button';\nimport Input from './Input';\n\nconst fromTalerToCent = amount => amount * 100;\n\nconst onToken = (amount, description, onSuccess, onError) => token =>\n  axios\n    .post(process.env.PAYMENT_SERVER_URL, {\n      description,\n      source: token.id,\n      currency: CONFIGURATION.currency,\n      amount: fromTalerToCent(amount),\n    })\n    .then(onSuccess)\n    .catch(onError);\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst FormContent = styled.div`\n  margin: 5px;\n`;\n\nconst Label = styled.label`\n  margin-right: 10px;\n`;\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: CONFIGURATION.defaultAmount,\n      username: '',\n      isSuccess: null,\n      isError: null\n    };\n\n    this.onAmountChange = this.onAmountChange.bind(this);\n    this.onUsernameChange = this.onUsernameChange.bind(this);\n    this.onSuccess = this.onSuccess.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  onUsernameChange(event) {\n    const { value } = event.target;\n    this.setState({ username: value });\n  }\n\n  onAmountChange(event) {\n    const { value } = event.target;\n    this.setState({ amount: value < 0 ? value * -1 : value });\n  }\n\n  onSuccess({ data }) {\n    const { amount, username } = this.state;\n\n    database.ref('fundings').push({\n      amount: +amount,\n      email: data.success.source.name,\n      username,\n      currency: CONFIGURATION.currency\n    });\n\n    this.setState({ isSuccess: true });\n  }\n\n  onError() {\n    this.setState({ isError: true });\n  }\n\n  render() {\n    const {\n      amount,\n      username,\n      isError,\n      isSuccess,\n    } = this.state;\n\n    if (isSuccess) {\n      return (\n        <div>\n          <p>Thanks for your funding!</p>\n        </div>\n      );\n    }\n\n    if (isError) {\n      return (\n        <div>\n          <p>Something went wrong. The payment couldn't be processed.</p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Form>\n          <FormContent>\n            <Label>\n              Amount ({getSymbolFromCurrency(CONFIGURATION.currency)}):\n            </Label>\n\n            <Input\n              type=\"number\"\n              min=\"1\"\n              max=\"99999\"\n              value={amount}\n              onChange={this.onAmountChange}\n              required\n            />\n          </FormContent>\n\n          <FormContent>\n            <Label>Your Name (leave empty to stay anonymous):</Label>\n\n            <Input\n              type=\"text\"\n              onChange={this.onUsernameChange}\n              value={username}\n            />\n          </FormContent>\n\n          <FormContent>\n            <StripeCheckout\n              name={CONFIGURATION.checkoutTitle}\n              description={CONFIGURATION.checkoutDescription}\n              amount={fromTalerToCent(amount)}\n              token={onToken(\n                amount,\n                CONFIGURATION.checkoutDescription,\n                this.onSuccess,\n                this.onError\n              )}\n              currency={CONFIGURATION.currency}\n              stripeKey={process.env.STRIPE_PUBLISHABLE_KEY}\n              panelLabel={CONFIGURATION.checkoutButtonLabel}\n            >\n              <Button type=\"button\">{CONFIGURATION.callToAction}</Button>\n            </StripeCheckout>\n          </FormContent>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}